{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/CountryPicker/CountryPicker.module.css","App.module.css","components/Chart/Chart.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","head","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f67e72a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__gLEQ4\",\"card\":\"Cards_card__VnMBW\",\"infected\":\"Cards_infected__9___h\",\"recovered\":\"Cards_recovered__3N438\",\"deaths\":\"Cards_deaths__3sY6H\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n return (\r\n    <div className={styles.container}>\r\n    <Grid container spacing={3} justify=\"center\">\r\n     <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}> \r\n     <CardContent>\r\n       <Typography color=\"textSecondary\" gutterBottom>\r\n         Infected</Typography>\r\n       <Typography variant=\"h5\">\r\n       <CountUp \r\n       start={0}\r\n       end={confirmed.value}\r\n       duration={2.5}\r\n       seperator=\",\"/> </Typography> \r\n       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography> \r\n       <Typography variant=\"body2\">Number of active cases of Covid 19</Typography>\r\n     </CardContent>\r\n     </Grid>\r\n\r\n     <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n     <CardContent>\r\n       <Typography color=\"textSecondary\" gutterBottom>\r\n         Recovered</Typography>\r\n         <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={2.5} seperator=\",\"/> </Typography> \r\n       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography> \r\n       <Typography variant=\"body2\">Number of recoveries of Covid 19</Typography>\r\n     </CardContent>\r\n     </Grid>\r\n     <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n     <CardContent>\r\n       <Typography color=\"textSecondary\" gutterBottom>\r\n         Deaths</Typography>\r\n         <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={2.5} seperator=\",\"/></Typography> \r\n       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography>  \r\n       <Typography variant=\"body2\">Number of Deaths caused by Covid 19</Typography>\r\n     </CardContent>\r\n     </Grid>\r\n\r\n        \r\n    </Grid>\r\n    </div>\r\n\r\n )\r\n\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url ='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\ntry {\r\n const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n\r\n   return {confirmed, recovered, deaths, lastUpdate};\r\n\r\n} catch (error){\r\n console.log(error);\r\n}\r\n}\r\n\r\nexport const fetchDailyData = async()=> {\r\ntry {\r\n    const {data} = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData)=>({\r\n        confirmed:dailyData.confirmed.total,\r\n        deaths:dailyData.deaths.total,\r\n        date:dailyData.reportDate,\r\n\r\n    }));\r\n    return modifiedData;\r\n} catch (error){\r\n    console.log(error);\r\n}\r\n}\r\n\r\n\r\nexport const fetchCountries = async ()=> {\r\n    try {\r\n    const {data:{ countries }} = await axios.get(`${url}/countries`);\r\n\r\n     return  countries.map((country) => country.name);\r\n     } catch (error){\r\n        console.log(error);\r\n     }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css'\r\n\r\n\r\n\r\n    const Chart = ({data : {confirmed, recovered, deaths}, country}) => {\r\n      const [dailyData, setDailyData] = useState({});\r\n\r\n      useEffect(() => {\r\n      const fetchAPI = async () => {\r\n           setDailyData(await fetchDailyData());\r\n      }\r\n           fetchAPI();\r\n      }, []);\r\n\r\n   const lineChart = (\r\n       dailyData.length?(\r\n       <Line\r\n           data={{\r\n             labels:dailyData.map(({date})=> date),\r\n             datasets:[{\r\n               data: dailyData.map(({confirmed})=> confirmed),\r\n               label:'Infected',\r\n               borderColor:'#3333ff',\r\n               fill:true,\r\n             }, {\r\n               data: dailyData.map(({deaths})=> deaths),\r\n               label:'Deaths',\r\n               borderColor:'red',\r\n               backgroundColor:'rgba(255,0,0,0.5)',\r\n               fill:true,\r\n             }],\r\n\r\n           }}\r\n\r\n         />): null\r\n\r\n   );\r\n\r\nconst barChart = (\r\n  confirmed\r\n  ? (\r\n    <Bar\r\n    data={{\r\n      labels: ['Infected', 'Recovered', 'Deaths'],\r\n      datasets:[{\r\n        label: 'People',\r\n        backgroundColor:[\r\n            'rgba(0,0,225, 0.5)',\r\n            'rgba(0,255,0, 0.5)',\r\n            'rgba(255,0,0, 0.5)',\r\n\r\n        ],\r\n        data: [confirmed.value, recovered.value, deaths.value]\r\n\r\n      }]\r\n    }}\r\n\r\n      options={{\r\n        legend: {display:false},\r\n        title: {display: true, text:`Current status in ${country}`},\r\n      }}\r\n     />\r\n  ) :null\r\n)\r\n\r\n\r\n\r\n return (\r\n     <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n     </div>\r\n\r\n\r\n )\r\n\r\n}\r\n\r\nexport default Chart;\r\n","import React, {useState,useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../../api';\r\nimport styles from './CountryPicker.module.css';\r\n\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\nconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(()=> {\r\n      const fetchAPI = async() => {\r\n        setFetchedCountries(await fetchCountries());\r\n      }\r\n        \r\nfetchAPI();\r\n\r\n  },[setFetchedCountries]);\r\n\r\n\r\n\r\n return (\r\n      <div> \r\n       <h1  className={styles.title} >Select Country</h1>\r\n     <FormControl className={styles.formControl}>\r\n         <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n       \r\n             <option value=\"\">Global</option>\r\n             {fetchedCountries.map((country,i) =>\r\n              <option key={i} value={country}>{country}</option>)}\r\n         </NativeSelect>\r\n     </FormControl>\r\n     </div>\r\n\r\n );\r\n\r\n};\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nclass App extends React.Component {\r\n\r\n    state ={\r\n        data:{},\r\n        country:'',\r\n    }\r\n\r\nasync componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n\r\nthis.setState({data:fetchedData});\r\n}\r\n\r\n\r\n\r\nhandleCountryChange =  async (country) => {\r\n    const fetchedData = await fetchData(country);    \r\n    this.setState({data:fetchedData, country:country});\r\n\r\n}\r\n\r\n\r\nrender(){\r\n\r\n const {data,country} = this.state;\r\n\r\n        return (\r\n           <div className={styles.container}>\r\n             <h1 className={styles.head}>Covid Tracker</h1>\r\n\r\n             <Cards data = {data} />\r\n             <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n             <Chart data = {data} country={country} />\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1ENyD\",\"title\":\"CountryPicker_title__LUeTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__12Xrt\",\"head\":\"App_head__31ZJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2qZTz\"};"],"sourceRoot":""}