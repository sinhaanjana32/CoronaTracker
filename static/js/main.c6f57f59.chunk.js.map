{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Weather.js","components/Footer.js","App.js","index.js","components/CountryPicker/CountryPicker.module.css","App.module.css","components/Chart/Chart.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Weather","temp","setTemp","feelsLike","setFeelsLike","then","res","main","feels_like","catch","err","AppBar","style","alignItems","fontSize","useStyles","makeStyles","footer","width","bottom","clear","position","marginTop","Footer","classes","BottomNavigation","BottomNavigationAction","padding","icon","href","App","state","fetchedData","setState","this","head","textAlign","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6f57f59.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__gLEQ4\",\"card\":\"Cards_card__VnMBW\",\"infected\":\"Cards_infected__9___h\",\"recovered\":\"Cards_recovered__3N438\",\"deaths\":\"Cards_deaths__3sY6H\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n return (\r\n    <div className={styles.container}>\r\n    <Grid container spacing={3} justify=\"center\">\r\n     <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}> \r\n     <CardContent>\r\n       <Typography color=\"textSecondary\" gutterBottom>\r\n         Infected</Typography>\r\n       <Typography variant=\"h5\">\r\n       <CountUp \r\n       start={0}\r\n       end={confirmed.value}\r\n       duration={2.5}\r\n       seperator=\",\"/> </Typography> \r\n       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography> \r\n       <Typography variant=\"body2\">Number of active cases of Covid 19</Typography>\r\n     </CardContent>\r\n     </Grid>\r\n\r\n     <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n     <CardContent>\r\n       <Typography color=\"textSecondary\" gutterBottom>\r\n         Recovered</Typography>\r\n         <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={2.5} seperator=\",\"/> </Typography> \r\n       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography> \r\n       <Typography variant=\"body2\">Number of recoveries of Covid 19</Typography>\r\n     </CardContent>\r\n     </Grid>\r\n     <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n     <CardContent>\r\n       <Typography color=\"textSecondary\" gutterBottom>\r\n         Deaths</Typography>\r\n         <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={2.5} seperator=\",\"/></Typography> \r\n       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography>  \r\n       <Typography variant=\"body2\">Number of Deaths caused by Covid 19</Typography>\r\n     </CardContent>\r\n     </Grid>\r\n\r\n        \r\n    </Grid>\r\n    </div>\r\n\r\n )\r\n\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url ='https://covid19.mathdro.id/api';\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\ntry {\r\n   const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n   return {confirmed, recovered, deaths, lastUpdate};\r\n} \r\ncatch (error){\r\n console.log(error);\r\n}\r\n}\r\n\r\nexport const fetchDailyData = async()=> {\r\ntry {\r\n    const {data} = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData)=>({\r\n        confirmed:dailyData.confirmed.total,\r\n        deaths:dailyData.deaths.total,\r\n        date:dailyData.reportDate,\r\n\r\n    }));\r\n    return modifiedData;\r\n} catch (error){\r\n    console.log(error);\r\n}\r\n}\r\n\r\n\r\nexport const fetchCountries = async ()=> {\r\n    try {\r\n    const {data:{ countries }} = await axios.get(`${url}/countries`);\r\n    return  countries.map((country) => country.name);\r\n     } catch (error){\r\n        console.log(error);\r\n     }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","  import React, {useState,useEffect} from 'react';\r\n  import {fetchDailyData} from '../../api';\r\n  import {Line, Bar} from 'react-chartjs-2';\r\n\r\n  import styles from './Chart.module.css'\r\n\r\n\r\n\r\n      const Chart = ({data : {confirmed, recovered, deaths}, country}) => {\r\n        const [dailyData, setDailyData] = useState({});\r\n\r\n        useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n            fetchAPI();\r\n        }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length?(\r\n        <Line\r\n            data={{\r\n              labels:dailyData.map(({date})=> date),\r\n              datasets:[{\r\n                data: dailyData.map(({confirmed})=> confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true,\r\n              }, {\r\n                data: dailyData.map(({deaths})=> deaths),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill:true,\r\n              }],\r\n            }}\r\n          />): null\r\n\r\n    );\r\n\r\n  const barChart = (\r\n    confirmed\r\n    ? (\r\n      <Bar\r\n      data={{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets:[{\r\n          label: 'People',\r\n          backgroundColor:[\r\n              'rgba(0,0,225, 0.5)',\r\n              'rgba(0,255,0, 0.5)',\r\n              'rgba(255,0,0, 0.5)',\r\n          ],\r\n          data: [confirmed.value, recovered.value, deaths.value]\r\n        }]\r\n      }}\r\n        options={{\r\n          legend: {display:false},\r\n          title: {display: true, text:`Current status in ${country}`},\r\n        }}\r\n      />\r\n    ) :null\r\n  )\r\n\r\n\r\n\r\n  return (\r\n      <div className={styles.container}>\r\n        {country ? barChart : lineChart}\r\n      </div>\r\n\r\n\r\n  )\r\n\r\n  }\r\n\r\n  export default Chart;\r\n","import React, {useState,useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../../api';\r\nimport styles from './CountryPicker.module.css';\r\n\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\nconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(()=> {\r\n      const fetchAPI = async() => {\r\n        setFetchedCountries(await fetchCountries());\r\n      }\r\n        \r\nfetchAPI();\r\n\r\n  },[setFetchedCountries]);\r\n\r\n\r\n\r\n return (\r\n      <div> \r\n       <h1 className={styles.title} >Select Country</h1>\r\n     <FormControl className={styles.formControl}>\r\n         <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n             <option value=\"\">Global</option>\r\n             {fetchedCountries.map((country,i) =>\r\n              <option key={i} value={country}>{country}</option>)}\r\n         </NativeSelect>\r\n     </FormControl>\r\n     </div>\r\n\r\n );\r\n\r\n};\r\n\r\nexport default CountryPicker;","import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { AppBar, Typography} from '@material-ui/core'\r\n\r\n\r\nconst Weather = () => {\r\nconst [temp, setTemp] = useState('')\r\nconst [feelsLike, setFeelsLike] = useState('')\r\n\r\nuseEffect(() => {\r\n      axios.get('https://api.openweathermap.org/data/2.5/weather?q=helsinki&appid=41f4cfe77c565c69a0fa892f6a6fad22&lang=en&units=metric')\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            setTemp(res.data.main.temp)\r\n            setFeelsLike(res.data.main.feels_like)\r\n        })\r\n        .catch((err)=>console.log(err))\r\n}, [temp])\r\n\r\n\r\n    return (\r\n      <AppBar color=\"default\" style={{ alignItems:'center'}}>\r\n      <Typography variant=\"subtitle2\">Current Temperature in Helsinki: <span style={{fontSize:\"20px\"}}>{temp}°C</span>&nbsp; Feels Like: <span style={{fontSize:\"20px\"}}>{feelsLike}°C</span> </Typography>\r\n      </AppBar>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n\r\n\r\n","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {BottomNavigation, BottomNavigationAction} from \"@material-ui/core\"\r\nimport LinkedIn from '@material-ui/icons/LinkedIn';\r\nimport GitHub from '@material-ui/icons/GitHub';\r\nimport Apps from '@material-ui/icons/Apps';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  footer: {\r\n    width: '100%',\r\n    backgroundColor:\"white\",\r\n    bottom: '0px',\r\n    clear: 'both',\r\n    position: 'relative',\r\n    marginTop:'30px'\r\n     },\r\n   \"&.MuiSvgIcon-root\": {\r\n     fill:\"yellow\",\r\n     \"&:hover\": {\r\n       fill:\"tan\",\r\n       fontSize:\"1.8rem\",\r\n     },\r\n   }\r\n  \r\n})\r\n\r\nconst Footer =() => {\r\n\r\nconst classes = useStyles();\r\n\r\nreturn(\r\n  <>\r\n\r\n\r\n<BottomNavigation  className={classes.footer} >\r\n\r\n\r\n<BottomNavigationAction  style={{padding:0}}\r\nicon={<Apps />}\r\nhref=\"https://anjanasinha.herokuapp.com/\"/>\r\n\r\n<BottomNavigationAction  style={{padding:0}}\r\nicon={<GitHub/>}\r\nhref=\"https://github.com/sinhaanjana32\"/>\r\n  \r\n\r\n<BottomNavigationAction style={{padding:0}}\r\n icon={<LinkedIn />}\r\n href=\"https://www.linkedin.com/in/anjana-sinha/\"/> \r\n\r\n</BottomNavigation>\r\n</>\r\n);\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport {Cards, Chart, CountryPicker ,Weather} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport Footer from './components/Footer'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state ={\r\n        data:{},\r\n        country:'',\r\n    }\r\n\r\nasync componentDidMount() {\r\nconst fetchedData = await fetchData();\r\nthis.setState({data:fetchedData});\r\n}\r\n\r\n\r\n\r\nhandleCountryChange =  async (country) => {\r\n    const fetchedData = await fetchData(country);    \r\n    this.setState({data:fetchedData, country:country});\r\n}\r\n\r\n\r\nrender(){\r\n const {data,country} = this.state;\r\n        return (\r\n            <>\r\n            <Weather/>\r\n             <Grid container className={styles.container}>\r\n             <h1 className={styles.head}>Covid Tracker</h1>\r\n             <Cards data = {data} />\r\n             <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n             <Chart data = {data} country={country} />\r\n            </Grid>\r\n                <Grid item  style={{textAlign:\"center\", padding:'10px'}} >\r\n                <Typography variant=\"body2\">\r\n     The tool used: API, React, MUI, Chart Js & Background Image Credit: Pixabay\r\n                </Typography>\r\n                  \r\n                </Grid>\r\n\r\n          <Grid>\r\n          <Footer/>\r\n          </Grid>\r\n           </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1ENyD\",\"title\":\"CountryPicker_title__LUeTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__12Xrt\",\"head\":\"App_head__31ZJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2qZTz\"};"],"sourceRoot":""}